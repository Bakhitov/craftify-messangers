#!/bin/bash

echo "üßπ –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤"
echo "=================================="

INSTANCE_MANAGER_URL="http://13.61.141.6:3000"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤
get_all_instances() {
    curl -s "$INSTANCE_MANAGER_URL/api/v1/instances" | jq -r '.instances[]'
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤
get_inactive_instances() {
    curl -s "$INSTANCE_MANAGER_URL/api/v1/instances" | jq -r '.instances[] | select(.status == "failed" or .status == "error" or .status == "disconnected" or .status == "stopped") | .id'
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤ (—Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤ –∏ –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö)
get_old_inactive_instances() {
    local cutoff_date=$(date -d '24 hours ago' -Iseconds)
    curl -s "$INSTANCE_MANAGER_URL/api/v1/instances" | jq -r --arg cutoff "$cutoff_date" '.instances[] | select(.created_at < $cutoff and (.status == "failed" or .status == "error" or .status == "disconnected" or .status == "stopped")) | .id'
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–Ω—Å—Ç–∞–Ω—Å–∞
check_instance_activity() {
    local instance_id="$1"
    local memory_data=$(curl -s "$INSTANCE_MANAGER_URL/api/v1/instances/$instance_id/memory")
    local api_key_usage=$(echo "$memory_data" | jq -r '.data.api_key_usage_count // 0')
    
    # –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ API –∫–ª—é—á–∞ = 0, –∏–Ω—Å—Ç–∞–Ω—Å –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
    if [ "$api_key_usage" -eq 0 ]; then
        echo "inactive"
    else
        echo "active"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–Ω—Å—Ç–∞–Ω—Å–∞
delete_instance() {
    local instance_id="$1"
    echo "üóëÔ∏è  –£–¥–∞–ª—è—é –∏–Ω—Å—Ç–∞–Ω—Å: $instance_id"
    
    local response=$(curl -s -X DELETE "$INSTANCE_MANAGER_URL/api/v1/instances/$instance_id")
    local success=$(echo "$response" | jq -r '.success // false')
    
    if [ "$success" = "true" ]; then
        echo "‚úÖ –ò–Ω—Å—Ç–∞–Ω—Å $instance_id —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–Ω—Å—Ç–∞–Ω—Å–∞ $instance_id: $(echo "$response" | jq -r '.error // "Unknown error"')"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏
cleanup_instances() {
    local mode="$1"
    local deleted_count=0
    local failed_count=0
    
    case "$mode" in
        "failed")
            echo "üîç –ü–æ–∏—Å–∫ –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º failed/error/disconnected/stopped..."
            local instances=$(get_inactive_instances)
            ;;
        "old")
            echo "üîç –ü–æ–∏—Å–∫ —Å—Ç–∞—Ä—ã—Ö –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤ (—Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤)..."
            local instances=$(get_old_inactive_instances)
            ;;
        "unused")
            echo "üîç –ü–æ–∏—Å–∫ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤ (—Å –Ω—É–ª–µ–≤—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º API)..."
            local instances=""
            local all_instances=$(curl -s "$INSTANCE_MANAGER_URL/api/v1/instances" | jq -r '.instances[].id')
            
            for instance_id in $all_instances; do
                local activity=$(check_instance_activity "$instance_id")
                if [ "$activity" = "inactive" ]; then
                    instances="$instances $instance_id"
                fi
            done
            ;;
        "interactive")
            echo "üîç –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ - –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç–∞–Ω—Å—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è..."
            interactive_cleanup
            return
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º: $mode"
            echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã: failed, old, unused, interactive"
            return 1
            ;;
    esac
    
    if [ -z "$instances" ]; then
        echo "‚úÖ –ò–Ω—Å—Ç–∞–Ω—Å—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        return 0
    fi
    
    echo "üìã –ù–∞–π–¥–µ–Ω—ã –∏–Ω—Å—Ç–∞–Ω—Å—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:"
    for instance_id in $instances; do
        local instance_info=$(curl -s "$INSTANCE_MANAGER_URL/api/v1/instances/$instance_id" | jq -r '.instance | "\(.provider) | \(.status) | \(.company_id) | \(.created_at)"')
        echo "  - $instance_id: $instance_info"
    done
    
    echo ""
    read -p "‚ùì –£–¥–∞–ª–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç–∞–Ω—Å—ã? (y/N): " -n 1 -r
    echo ""
    
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        for instance_id in $instances; do
            if delete_instance "$instance_id"; then
                ((deleted_count++))
            else
                ((failed_count++))
            fi
            sleep 1  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —É–¥–∞–ª–µ–Ω–∏—è–º–∏
        done
        
        echo ""
        echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—á–∏—Å—Ç–∫–∏:"
        echo "‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ: $deleted_count"
        echo "‚ùå –û—à–∏–±–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è: $failed_count"
    else
        echo "‚ùå –û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
    fi
}

# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
interactive_cleanup() {
    local all_instances=$(curl -s "$INSTANCE_MANAGER_URL/api/v1/instances" | jq -r '.instances[] | "\(.id)|\(.provider)|\(.status)|\(.company_id)|\(.created_at)"')
    
    echo "üìã –í—Å–µ –∏–Ω—Å—Ç–∞–Ω—Å—ã:"
    echo "ID | Provider | Status | User ID | Created At"
    echo "---|----------|--------|---------|----------"
    
    local counter=1
    echo "$all_instances" | while IFS='|' read -r id provider status user_id created_at; do
        printf "%2d | %-12s | %-10s | %-15s | %s | %s\n" $counter "$id" "$provider" "$status" "$user_id" "$created_at"
        ((counter++))
    done
    
    echo ""
    read -p "üìù –í–≤–µ–¥–∏—Ç–µ ID –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª): " -r instance_ids
    
    for instance_id in $instance_ids; do
        delete_instance "$instance_id"
        sleep 1
    done
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–†–ï–ñ–ò–ú]"
    echo ""
    echo "–†–µ–∂–∏–º—ã –æ—á–∏—Å—Ç–∫–∏:"
    echo "  failed      - –£–¥–∞–ª–∏—Ç—å –∏–Ω—Å—Ç–∞–Ω—Å—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º failed/error/disconnected/stopped"
    echo "  old         - –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∏–Ω—Å—Ç–∞–Ω—Å—ã (—Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤)"
    echo "  unused      - –£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–Ω—Å—Ç–∞–Ω—Å—ã (—Å –Ω—É–ª–µ–≤—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º API)"
    echo "  interactive - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 failed"
    echo "  $0 old"
    echo "  $0 unused"
    echo "  $0 interactive"
}

# –§—É–Ω–∫—Ü–∏—è —Å—É—Ö–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ (–ø–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è)
dry_run() {
    local mode="$1"
    echo "üîç –°—É—Ö–æ–π –∑–∞–ø—É—Å–∫ - –ø–æ–∫–∞–∑—ã–≤–∞—é —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ (—Ä–µ–∂–∏–º: $mode)"
    
    case "$mode" in
        "failed")
            local instances=$(get_inactive_instances)
            ;;
        "old")
            local instances=$(get_old_inactive_instances)
            ;;
        "unused")
            local instances=""
            local all_instances=$(curl -s "$INSTANCE_MANAGER_URL/api/v1/instances" | jq -r '.instances[].id')
            
            for instance_id in $all_instances; do
                local activity=$(check_instance_activity "$instance_id")
                if [ "$activity" = "inactive" ]; then
                    instances="$instances $instance_id"
                fi
            done
            ;;
    esac
    
    if [ -z "$instances" ]; then
        echo "‚úÖ –ò–Ω—Å—Ç–∞–Ω—Å—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        return 0
    fi
    
    echo "üìã –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∏–Ω—Å—Ç–∞–Ω—Å—ã:"
    for instance_id in $instances; do
        local instance_info=$(curl -s "$INSTANCE_MANAGER_URL/api/v1/instances/$instance_id" | jq -r '.instance | "\(.provider) | \(.status) | \(.company_id) | \(.created_at)"')
        echo "  - $instance_id: $instance_info"
    done
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "$1" in
    "help"|"-h"|"--help")
        show_help
        ;;
    "dry-run")
        if [ -z "$2" ]; then
            echo "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ä–µ–∂–∏–º –¥–ª—è —Å—É—Ö–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"
            show_help
            exit 1
        fi
        dry_run "$2"
        ;;
    "failed"|"old"|"unused"|"interactive")
        cleanup_instances "$1"
        ;;
    "")
        echo "‚ùå –†–µ–∂–∏–º –Ω–µ —É–∫–∞–∑–∞–Ω"
        show_help
        exit 1
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º: $1"
        show_help
        exit 1
        ;;
esac 